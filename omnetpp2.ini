[General]
network = flora.simulations.LoRaNetworkTest
sim-time-limit = 1d
simtime-resolution = -11
repeat = 30
**.vector-recording = true

rng-class = "cMersenneTwister"
**.maxTransmissionDuration = 4s
**.energyDetection = -110dBm

# ADR & packet sending
**.numberOfPacketsToSend = 0  # 0 means infinite
**.timeToFirstPacket = exponential(1000s)
**.timeToNextPacket = exponential(1000s)
**.alohaChannelModel = false

# Area definition
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.sigma = 3.57

# Radio
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

# Gateway
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = 200m
**.loRaGW[0].**.initialY = 200m
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

# Network server
**.networkServer.numApps = 1
**.networkServer.app[0].typename = "NetworkServerApp"
**.networkServer.app[0].destAddresses = "loRaGW[0]"
**.networkServer.app[0].destPort = 2000
**.networkServer.app[0].localPort = 1000
**.networkServer.app[0].adrMethod = "avg"
**.networkServer.**.evaluateADRinServer = true

# LoRa Nodes
**.numberOfNodes = 5
**.loRaNodes[*].numApps = 1
**.loRaNodes[*].app[0].typename = "SimpleLoRaApp"
**.loRaNodes[*].**.initialLoRaSF = 12
**.loRaNodes[*].**.initialLoRaTP = 14dBm
**.loRaNodes[*].**.initialLoRaBW = 125kHz
**.loRaNodes[*].**.initialLoRaCR = 4
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = true

# Node positions (5 fire sensors)
**.loRaNodes[0].**.initialX = 300m
**.loRaNodes[0].**.initialY = 350m
**.loRaNodes[1].**.initialX = 310m
**.loRaNodes[1].**.initialY = 330m
**.loRaNodes[2].**.initialX = 320m
**.loRaNodes[2].**.initialY = 370m
**.loRaNodes[3].**.initialX = 380m
**.loRaNodes[3].**.initialY = 320m
**.loRaNodes[4].**.initialX = 360m
**.loRaNodes[4].**.initialY = 340m

# Energy model
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# Channel caching
**.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 546m
**.LoRaMedium.neighborCache.refillPeriod = 3000s

# Delay modeling
**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.displayAddresses = false
